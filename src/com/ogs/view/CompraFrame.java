/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ogs.view;

import com.ogs.connection.MySQL;
import com.ogs.object.Compra;
import com.ogs.object.Disco;
import com.ogs.object.Funcionario;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author regis
 */
public class CompraFrame extends javax.swing.JFrame {

    MySQL connection = new MySQL();
    int currentId = 0;
    
    /**
     * Creates new form CompraFrame
     */
    public CompraFrame() {
        initComponents();
    }

    private void clearValues()
    {
        cbxFuncionario.setSelectedIndex(0);
        cbxDisco.setSelectedIndex(0);
        nbQuantidade.setValue(1);
        btnAlterar.setEnabled(false);
        btnRemover.setEnabled(false);
        currentId = 0;
    }
    
    private void reloadTable()
    {   
        this.connection.conectaBanco();
        
        Compra compra = new Compra();
                
        DefaultTableModel dtm = (DefaultTableModel) tblCompra.getModel();
     
        dtm.setRowCount(0);
        
        try {
            this.connection.executarSQL(
                   "SELECT c.id, c.funcionario_resp, f.nome, c.disco_compra, d.titulo, c.quantidade FROM Compra AS c INNER JOIN Disco AS d ON c.disco_compra = d.id INNER JOIN Funcionario AS f ON c.funcionario_resp = f.rf;"
            );
            
            while(this.connection.getResultSet().next()){
                compra.setId(this.connection.getResultSet().getInt(1));
                compra.setFuncionario(this.connection.getResultSet().getInt(2));
                String funcionarioNome = this.connection.getResultSet().getString(3);
                compra.setDisco(this.connection.getResultSet().getInt(4));
                String discoTitulo = this.connection.getResultSet().getString(5);
                compra.setQuantidade(this.connection.getResultSet().getInt(6));
                
                String status = "";
                
                Object[] row = { compra.getId(), discoTitulo, funcionarioNome, compra.getQuantidade() };
                
                dtm.addRow(row);
           }
        } catch (Exception e) {            
            System.out.println("Erro ao consultar cliente " +  e.getMessage());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nbQuantidade = new javax.swing.JSpinner();
        cbxFuncionario = new javax.swing.JComboBox<>();
        btnCadastrar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        cbxDisco = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCompra = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Compras");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Cadastro de Compras:");

        jLabel2.setText("Funcionario:");

        jLabel4.setText("Quantidade:");

        cbxFuncionario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.setEnabled(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.setEnabled(false);
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        cbxDisco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Disco:");

        tblCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Disco", "Funcionario", "Quantidade"
            }
        ));
        tblCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCompraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCompra);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 486, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(nbQuantidade)
                                    .addComponent(cbxFuncionario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                                .addComponent(btnAlterar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnRemover, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addComponent(cbxDisco, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxDisco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nbQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemover))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        this.connection.conectaBanco();
        
        Compra compra = new Compra();
        Funcionario f = Funcionario.class.cast(cbxFuncionario.getSelectedItem());
        compra.setFuncionario(f.getRf());
        Disco d = Disco.class.cast(cbxDisco.getSelectedItem());
        compra.setDisco(d.getId());
        compra.setQuantidade(Integer.parseInt(nbQuantidade.getValue().toString()));
        
        this.connection.insertSQL("INSERT INTO Compra(disco_compra, funcionario_resp, quantidade) VALUES ("
                + compra.getDisco() + ","
                + compra.getFuncionario()+ ","
                + compra.getQuantidade()
                + ")");
        
        reloadTable();
        clearValues();
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        this.connection.conectaBanco();
        
        Compra compra = new Compra();
        Funcionario f = Funcionario.class.cast(cbxFuncionario.getSelectedItem());
        compra.setFuncionario(f.getRf());
        Disco d = Disco.class.cast(cbxDisco.getSelectedItem());
        compra.setDisco(d.getId());
        compra.setQuantidade(Integer.parseInt(nbQuantidade.getValue().toString()));
        
        this.connection.insertSQL("UPDATE Compra SET "
                + "funcionario_resp=" + compra.getFuncionario()+ ","
                + "disco_compra=" + compra.getDisco()+ ","
                + "quantidade=" + compra.getQuantidade()
                + " WHERE "
                + "id=" + currentId
                + ";");
        
        reloadTable();
        clearValues();
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        this.connection.conectaBanco();
        this.connection.insertSQL("DELETE FROM Compra WHERE "
                + "id=" + currentId + ";");
        reloadTable();
        clearValues();
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        reloadTable();
        
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        try {
            this.connection.executarSQL(
                "SELECT id, titulo FROM Disco;"
            );
            
            while(this.connection.getResultSet().next()){
                Disco disco = new Disco();
                disco.setId(this.connection.getResultSet().getInt(1));
                disco.setTitulo(this.connection.getResultSet().getString(2));
                model.addElement(disco);
           }
           cbxDisco.setModel(model);
        } catch (Exception e) {            
            System.out.println("Erro ao consultar cliente " +  e.getMessage());
        }
        
        
        model = new DefaultComboBoxModel();
        
        try {
            this.connection.executarSQL(
                "SELECT rf, nome FROM Funcionario;"
            );
            
            while(this.connection.getResultSet().next()){
                Funcionario funcionario = new Funcionario();
                funcionario.setRf(this.connection.getResultSet().getInt(1));
                funcionario.setNome(this.connection.getResultSet().getString(2));
                model.addElement(funcionario);
           }
           cbxFuncionario.setModel(model);
        } catch (Exception e) {            
            System.out.println("Erro ao consultar cliente " +  e.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        EscolhaFrame fr = new EscolhaFrame();
        fr.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void tblCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCompraMouseClicked
        JTable source = (JTable)evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        
        String s = source.getModel().getValueAt(row, 0)+"";
        
        Compra compra = new Compra();
        compra.setId(Integer.parseInt(s));
        
        Disco disco = new Disco();
        Funcionario funcionario = new Funcionario();
        
        try {
            this.connection.executarSQL(
                   "SELECT c.funcionario_resp, f.nome, c.disco_compra, d.titulo, c.quantidade FROM Compra AS c INNER JOIN Funcionario AS f ON c.funcionario_resp = f.rf INNER JOIN Disco AS d ON c.disco_compra = d.id"
                 + " WHERE "
                     + "c.id="
                     + compra.getId()
                 + ";"
            );
            
            while(this.connection.getResultSet().next()){
                compra.setFuncionario(this.connection.getResultSet().getInt(1));
                funcionario.setRf(this.connection.getResultSet().getInt(1));
                funcionario.setNome(this.connection.getResultSet().getString(2));
                compra.setDisco(this.connection.getResultSet().getInt(3));
                disco.setId(this.connection.getResultSet().getInt(3));
                disco.setTitulo(this.connection.getResultSet().getString(4));
                compra.setQuantidade(this.connection.getResultSet().getInt(5));
            }
        }
        catch (Exception e) {            
            System.out.println("Erro ao consultar cliente " +  e.getMessage());
        }
        finally {
            cbxFuncionario.setSelectedIndex(funcionario.getRf() - 1);
            cbxDisco.setSelectedIndex(disco.getId() - 1);
            nbQuantidade.setValue(compra.getQuantidade());
            currentId = compra.getId();
            btnAlterar.setEnabled(true);
            btnRemover.setEnabled(true);
        }
    }//GEN-LAST:event_tblCompraMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompraFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JComboBox<String> cbxDisco;
    private javax.swing.JComboBox<String> cbxFuncionario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner nbQuantidade;
    private javax.swing.JTable tblCompra;
    // End of variables declaration//GEN-END:variables
}
